from environs import Env

env = Env()
env.read_env()

DATA_FOLDER = env.str('DATA_FOLDER')
OUTPUT_FOLDER = DATA_FOLDER + env.str('OUTPUT_FOLDER')
RECORDINGS_FOLDER = DATA_FOLDER + env.str('RECORDINGS_FOLDER')
REFERENCES_FOLDER = DATA_FOLDER + env.str('REFERENCES_FOLDER')
TEMP_FOLDER = DATA_FOLDER + env.str('TEMP_FOLDER')

RECORDING_TYPES = env.json('RECORDING_TYPES')
NEED_CONFRONT_RECORDING_TYPES = env.json('NEED_CONFRONT_RECORDING_TYPES')
NEED_CENTRE_RECORDING_TYPES = env.json('NEED_CENTRE_RECORDING_TYPES')
NEED_ANGULATION_BEFORE_VISUALIZATION = env.json('NEED_ANGULATION_BEFORE_VISUALIZATION')

RECORDING_FOR_SKELETON = env.str('RECORDING_FOR_SKELETON')
RECORDING_FOR_SCORE = env.str('RECORDING_FOR_SCORE')

DEBUG_INFO = env.bool('DEBUG_INFO')
MINIMUM_VELOCITY = env.int('MINIMUM_VELOCITY')
MINIMUM_SCORE = env.int('MINIMUM_SCORE')
MAXIMUM_SCORE = env.int('MAXIMUM_SCORE')
COLOR_MAP = env.str('COLOR_MAP')

GIF_WRITER = env.str('GIF_WRITER')
GIF_FPS = env.int('GIF_FPS')

AXIS = env.json('AXIS')
VECTORS_ANGULATION_MAP = env.json('VECTORS_ANGULATION_MAP')
SIMPLIFIED_JOINTS = env.json('SIMPLIFIED_JOINTS')

USED_COLUMNS = ["Frame"]
for joints in SIMPLIFIED_JOINTS:
    for axis in AXIS:
        USED_COLUMNS.append(joints + axis)

SKELETON_CONNECTION_MAP = env.json('SKELETON_CONNECTION_MAP')

HEATMAP_JOINT_POSITION = env.json('HEATMAP_JOINT_POSITION')
